buildscript {
	ext {
		springBootVersion = '1.4.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

jar {
	baseName = 'doerapispring'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.plugin:spring-plugin-core:1.0.0.RELEASE')
    compile('org.postgresql:postgresql:9.4-1206-jdbc42')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.security:spring-security-crypto:4.1.2.RELEASE')
    compile('org.springframework.hateoas:spring-hateoas:0.18.0.RELEASE')
	compileOnly('org.projectlombok:lombok:1.16.10')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.easytesting:fest-assert-core:2.0M8')
	testCompile('com.jayway.jsonpath:json-path:2.2.0')
	testCompile('com.jayway.jsonpath:json-path-assert:2.2.0')
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

apply from: "$projectDir/gradle/integrationTest.gradle"
apply from: "$projectDir/gradle/test.gradle"
