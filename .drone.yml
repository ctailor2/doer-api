kind: pipeline
type: kubernetes
name: doer-api

platform:
  os: linux
  arch: arm64

clone:
  disable: true

trigger:
  branch:
    - master
  event:
    - push
    - custom

steps:
  - name: clone
    image: alpine/git
    commands:
      - git clone https://$${ACCESS_TOKEN}@github.com/ctailor2/doer-api.git .
      - git checkout $DRONE_COMMIT
    environment:
      ACCESS_TOKEN:
        from_secret: access_token
  - name: test
    image: arm64v8/gradle:6.6-jdk8
    commands:
      - gradle test integrationTest
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/test
  - name: "bump version for build and deploy"
    image: alpine/git
    commands:
      - git fetch --tags
      - git describe --tags --abbrev=0 --match *-rc > last-version.txt
      - major=$(cut -d . -f 1 last-version.txt)
      - minor=$(cut -d . -f 2 last-version.txt)
      - patch=$(cut -d . -f 3 last-version.txt | cut -d - -f 1)
      - next_patch=$((patch + 1))
      - next_version="$major.$minor.$next_patch-rc"
      - echo "$next_version" > .tags
      - 'printf "api:\n  image:\n    tag: %s\n\n" "$next_version" > doer-values.yaml'
      - echo "$next_version" | xargs git tag
      - git push --tags
  - name: "build and publish image"
    image: plugins/docker
    settings:
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo: ctailor2/doer-api
  - name: "deploy staging"
    image: ctailor2/drone-helm3
    pull: always
    environment:
      POSTGRESQL_PASSWORD:
        from_secret: postgresql_password
    settings:
      debug: true
      add_repos:
        - "chartmuseum=http://chartmuseum-chartmuseum.drone"
        - "bitnami=https://charts.bitnami.com/bitnami"
      mode: upgrade
      chart: "chartmuseum/doer"
      release: doer
      namespace: doer-staging
      values:
        - "db.postgresqlPassword=$POSTGRESQL_PASSWORD"
      values_files:
        - doer-values.yaml
        - helm-staging-values.yaml
      wait_for_upgrade: true
      kube_api_server: https://kubernetes.default
      kube_service_account: drone-helm
      kube_token:
        from_secret: kubernetes_token
      skip_tls_verify: true
  - name: "clone e2e tests"
    image: alpine/git
    commands:
      - git clone https://github.com/ctailor2/doer-e2e-tests.git
  - name: "e2e test"
    image: node:10.0
    commands:
      - apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
      - wget -O google-chrome-stable_current_arm64.deb "http://dl.google.com/linux/direct/google-chrome-stable_current_arm64.deb"
      - dpkg -i google-chrome-stable_current_arm64.deb
      - apt-get install -f -y
      - cd doer-e2e-tests
      - npm ci
      - $(npm bin)/cypress run -b chrome -c baseUrl=http://doer-web.doer-staging
services:
  - name: test-db
    image: postgres:9.6
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: supersecret
      POSTGRES_DB: test
